<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/cs-blog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/cs-blog/" rel="alternate" type="text/html" /><updated>2024-01-12T17:15:20+09:00</updated><id>http://localhost:4000/cs-blog/feed.xml</id><title type="html">sendol’s CS &amp;amp; Dev. Blog</title><subtitle>sendol's CS &amp; Dev. Blog</subtitle><author><name>sendol</name><email>sendol39@gmail.com</email></author><entry><title type="html">Ubuntu Destop + Nvidia Gpu 환경에서 듀얼 모니터 설정</title><link href="http://localhost:4000/cs-blog/others/Ubuntu-Destop-+-NVIDIA-GPU-%ED%99%98%EA%B2%BD%EC%97%90%EC%84%9C-%EB%93%80%EC%96%BC-%EB%AA%A8%EB%8B%88%ED%84%B0-%EC%84%A4%EC%A0%95/" rel="alternate" type="text/html" title="Ubuntu Destop + Nvidia Gpu 환경에서 듀얼 모니터 설정" /><published>2023-12-30T00:00:00+09:00</published><updated>2023-12-30T00:00:00+09:00</updated><id>http://localhost:4000/cs-blog/others/Ubuntu-Destop-+-NVIDIA-GPU-%ED%99%98%EA%B2%BD%EC%97%90%EC%84%9C-%EB%93%80%EC%96%BC-%EB%AA%A8%EB%8B%88%ED%84%B0-%EC%84%A4%EC%A0%95</id><content type="html" xml:base="http://localhost:4000/cs-blog/others/Ubuntu-Destop-+-NVIDIA-GPU-%ED%99%98%EA%B2%BD%EC%97%90%EC%84%9C-%EB%93%80%EC%96%BC-%EB%AA%A8%EB%8B%88%ED%84%B0-%EC%84%A4%EC%A0%95/"><![CDATA[<head></head>

<p>나는 좀 특이한 구성으로 듀얼 모니터 환경을 세팅해 놨다. 왼쪽에는 1920*1080 해상도의 서브 모니터를 90도 회전시킨 다음 화면 맨 위쪽까지 쳐다보는 게 불편해서 위아래 일부를 잘라놓은 상태로 1080*1440 해상도로 사용하고 있고, 오른쪽에는 2560*1440 해상도의 메인 모니터를 그나마 평범하게 설치해서 사용하고 있다.</p>

<p>NVIDIA X Server를 잘 만져줘서 설정이 제대로 됐다고 생각하고 대충 잘 쓰고 있다가 재부팅을 해 보니 문제가 발생했다. 로그온 화면에서 메인 모니터가 왼쪽 모니터로 설정이 돼 있는지 왼쪽 모니터에 반대 방향으로 90도 돌아간 로그인화면이 떠 있고, 로그인을 하고 나니 메인 모니터는 제대로 잡혔지만 서브 모니터가 1080*1920 사이즈로 화면을 꽉 채우고 있었다.</p>

<p>나중에 Ubuntu를 재설치하거나 다른 PC에 깔 때 삽질하지 않기 위해서 일단 써 둔다.</p>

<p>일단 GPU 드라이버는 설치됐다고 가정하고 글을 쓰겠다. 설치가 안 되어 있다면 <a href="https://pstudio411.tistory.com/entry/Ubuntu-2004-Nvidia%EB%93%9C%EB%9D%BC%EC%9D%B4%EB%B2%84-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0">이런 글</a>을 참고해서 설치해 주도록 하자.</p>

<ol>
  <li>
    <p>NVIDIA X Server로 설정 변경</p>

    <p>우선 터미널에 <code class="language-plaintext highlighter-rouge">sudo nvidia-settings</code>를 쳐서 X Server를 실행시킨다. 듀얼 모니터의 해상도나 모니터 배치 같은 설정은 왼쪽 메뉴에서 <strong>X Server Display Configuration</strong>을 선택하면 볼 수 있다.</p>

    <p>메인 모니터 설정은, 위쪽에서 메인 모니터로 설정할 모니터를 선택하고 <strong>Make this the primary display for the X screen</strong>을 체크해주면 된다. 모니터를 회전시켜서 사용하는 경우, <strong>Orientation</strong>의 설정을 바꿔주면 된다.</p>

    <p>나처럼 모니터의 일부만 사용할 경우 <strong>Advanced…</strong> 뷰의 <strong>ViewPortIn, ViewPortOut, Panning</strong> 옵션을 사용해야 된다.</p>

    <figure style="text-align: center;">
     <img src="/cs-blog/assets/images/Ubuntu-Destop-+-NVIDIA-GPU-환경에서-듀얼-모니터-설정/nvidia-x-server.png" alt="" style="border: 5px solid #555; text-align: center" />
 </figure>

    <p><strong>ViewPortIn</strong>과 <strong>Panning</strong>에는 모두 출력할 화면의 해상도를 적는다. <strong>ViewPortOut</strong>은 <code class="language-plaintext highlighter-rouge">Xsize</code>x<code class="language-plaintext highlighter-rouge">Ysize</code>+<code class="language-plaintext highlighter-rouge">Xoffset</code>+<code class="language-plaintext highlighter-rouge">Yoffset</code> 형식이다. 모니터를 회전시키지 않은 상태라면 <code class="language-plaintext highlighter-rouge">Xsize</code>x<code class="language-plaintext highlighter-rouge">Ysize</code> 부분에는 ViewPortIn과 Panning에 적은 값을 그대로 적으면 되고, 회전시켰다면 <code class="language-plaintext highlighter-rouge">Xsize</code>와 <code class="language-plaintext highlighter-rouge">Ysize</code>의 순서를 바꿔서 적으면 된다. <code class="language-plaintext highlighter-rouge">Xoffset</code>과 <code class="language-plaintext highlighter-rouge">Yoffset</code>은 화면의 표시 위치를 결정하는 변수이다. 잘 조절해 가면서 자신에게 맞는 값을 설정하면 된다.</p>
  </li>
  <li>
    <p>재부팅 / 다시 로그인 했을 때도 설정 유지</p>

    <p>터미널에 <code class="language-plaintext highlighter-rouge">sudo nvidia-settings</code>를 쳐서 <code class="language-plaintext highlighter-rouge">xorg.conf</code> 파일을 생성한다. 이후 <code class="language-plaintext highlighter-rouge">xorg.conf</code> 파일에서 <strong>“Device”</strong>로 시작하는 블럭을 찾은 후, 아래 내용을 블럭 끝에 붙여넣는다.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> Option "RegistryDwords" "PowerMizerEnable=0x1; PerfLevelSrc=0x3322"
</code></pre></div>    </div>

    <p>(출처: https://askubuntu.com/questions/379483/nvidia-x-server-settings-lost-on-every-reboot)</p>
  </li>
  <li>
    <p>로그인 전 화면에도 설정 적용</p>

    <p>아래 명령어를 터미널에 입력하면 된다. gdm은 그래픽 로그인 화면을 관리하는 특수한 유저라고 생각하면 된다.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> sudo cp ~/.config/monitors.xml ~gdm/.config/monitors.xml
 sudo chown gdm:gdm ~gdm/.config/monitors.xml
</code></pre></div>    </div>

    <p>왜인지는 모르겠지만 이 방법으로 해결했다는 다른 글들을 보면 한 번에 되지 않고 재부팅을 몇 번씩 해가면서 여러 번 시도해야 했다는 얘기가 있다.</p>

    <p>(출처: https://askubuntu.com/questions/1043337/is-there-to-make-the-login-screen-appear-on-the-external-display-in-18-04)</p>
  </li>
</ol>]]></content><author><name>sendol</name><email>sendol39@gmail.com</email></author><category term="Others" /><category term="ubuntu" /><category term="environment-setup" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">레이아웃 수정 To-Do List</title><link href="http://localhost:4000/cs-blog/others/%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EC%88%98%EC%A0%95-to-do-list/" rel="alternate" type="text/html" title="레이아웃 수정 To-Do List" /><published>2023-10-25T00:00:00+09:00</published><updated>2023-10-25T00:00:00+09:00</updated><id>http://localhost:4000/cs-blog/others/%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EC%88%98%EC%A0%95-to-do-list</id><content type="html" xml:base="http://localhost:4000/cs-blog/others/%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EC%88%98%EC%A0%95-to-do-list/"><![CDATA[<head></head>

<h2 id="문제-해결">문제 해결</h2>

<ol>
  <li>
    <p>포스트 페이지 하단의 YOU MAY ALSO ENJOY</p>

    <figure style="width: 80%; margin: auto;">
     <img src="/cs-blog/assets/images/레이아웃-수정-to-do-list/image_1.png" alt="image_1.png" />
 </figure>

    <p>브라우저의 width가 <strong>medium</strong>일 때 문제가 발생한다.</p>

    <p>대충 고쳤다. <code class="language-plaintext highlighter-rouge">_sass/minimal-mistakes/_page.scss</code>에서, <code class="language-plaintext highlighter-rouge">.page__related</code>에 아래 있는 저걸 추가하면 된다.</p>

    <div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">@include</span> <span class="nd">breakpoint</span><span class="p">(</span><span class="nv">$medium</span><span class="p">)</span> <span class="p">{</span>
     <span class="nl">width</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
 <span class="p">}</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>상단바 메뉴</p>

    <figure style="width: 80%; margin: auto;">
     <img src="/cs-blog/assets/images/레이아웃-수정-to-do-list/image_1.png" alt="image_2.png" />
 </figure>

    <p>엄밀히 말하면 문제는 아닌 것 같지만, 메뉴 전체를 보여줄 수 없을 정도로 브라우저 width가 작다면 그냥 오른쪽 위 더보기 메뉴에 모든 메뉴를 몰아넣을 수 있으면 좋을 것 같다. 솔직히 몬가 좀 불편하다.</p>
  </li>
</ol>

<h2 id="기능-추가">기능 추가</h2>

<h3 id="포스트-기본-스플래시-이미지--미리보기-사진-추가">포스트 기본 스플래시 이미지 / 미리보기 사진 추가</h3>

<h3 id="블로그-배너-추가">블로그 배너 추가</h3>

<h3 id="포스트-목차-추가">포스트 목차 추가</h3>]]></content><author><name>sendol</name><email>sendol39@gmail.com</email></author><category term="Others" /><category term="html" /><category term="css" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Writing HTML Post</title><link href="http://localhost:4000/cs-blog/others/writing-html-post/" rel="alternate" type="text/html" title="Writing HTML Post" /><published>2023-10-24T00:00:00+09:00</published><updated>2023-10-24T00:00:00+09:00</updated><id>http://localhost:4000/cs-blog/others/writing-html-post</id><content type="html" xml:base="http://localhost:4000/cs-blog/others/writing-html-post/"><![CDATA[<head>

</head>
<body>
    Hello, world! <br>
    <code>
        <!DOCTYPE html>
    </code>
</body>]]></content><author><name>sendol</name><email>sendol39@gmail.com</email></author><category term="Others" /><category term="html" /><category term="css" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Writing The First Post</title><link href="http://localhost:4000/cs-blog/others/writing-the-first-post/" rel="alternate" type="text/html" title="Writing The First Post" /><published>2023-10-19T00:00:00+09:00</published><updated>2023-10-19T00:00:00+09:00</updated><id>http://localhost:4000/cs-blog/others/writing-the-first-post</id><content type="html" xml:base="http://localhost:4000/cs-blog/others/writing-the-first-post/"><![CDATA[<head>
    <script type="text/x-mathjax-config">

    MathJax.Hub.Config({

    tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}

    });

    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/latest.js?config=TeX-MML-AM_CHTML" async=""></script>
</head>

<p>Hello, world!는 언제나 국룰이다.</p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// cpp</span>
<span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Hello, world!"</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># python
</span><span class="k">print</span><span class="p">(</span><span class="s">"Hello, world!"</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Rust</span>
<span class="k">use</span> <span class="nn">std</span><span class="p">::</span><span class="n">io</span><span class="p">;</span>
<span class="k">fn</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="nd">println!</span><span class="p">(</span><span class="s">"Hello, world!"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Hello, world!</span><span class="dl">"</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="to-do-list">To-Do List</h2>

<ol>
    <li> ✅ 블로그에 글 하나 올리기 </li>
    <li> ✅ 블로그 메인 화면 및 사이드바 등에 개인정보 채워두기 (닉네임, 깃헙 링크 등등) </li>
    <li> ⬜ 제대로 된 자기소개 페이지 하나 만들기 <del>&lt;- 쓸 거 없어서 못 만드는 중</del> ㄱ</li>
    <li> ✅ 블로그 맨 위에 메뉴 바 만들기 </li>
    <li> ✅ 블로그 포스트 검색 기능 만들기 </li>
    <li> <del>✅</del> 폰트 및 레이아웃 조절하기. 아직 할 게 좀 남았는데 글 하나 더 써서 기록해둬야겠다.</li>
    <li> ✅ 태그 및 기능 추가하기 </li>
    <li> ❔ 블로그 포스트 연도별 / 카테고리 별 뷰 만들기 &lt;- 반 정도 함 </li>
    <li> <del>⬜ 블로그에 HTML로 포스트 올리기</del> 생각보다 구리다. 그냥 MD에 임베드해서 쓰자. </li>
    <li> <del>⬜ Javascript 관련 기능 어떻게 쓰는지 알아보기</del> 나중에 할래</li>
</ol>

<h2 id="tips--troubleshooting">Tips &amp; Troubleshooting</h2>

<ol>
  <li>
    <p>Mardown 파일에 포스트 제목을 따로 쓸 필요는 없다. 굳이 쓰면 이렇게 제목이 두 번 표시된다.</p>

    <figure style="text-align: center;">
     <img src="/cs-blog/assets/images/writing-the-first-post/image_1.png" alt="Screenshot of blog post upper part wtih duplicated title" style="border: 5px solid #555; text-align: center" />
     <figcaption> 이미지에 테두리 넣는 법도 배웠다? </figcaption>
 </figure>
  </li>
  <li>
    <p>Markdown 스타일 List</p>

    <p>Markdown에서 <code class="language-plaintext highlighter-rouge">1. ... &lt;br&gt; 2. ... &lt;br&gt; ...</code>같은 형태로 글을 쓰면 저절로 ordered list가 된다. ordered list 안의 (plain text를 포함한) 컴포넌트를 작성할 때 들여쓰기를 안 해주면 컴포넌트가 리스트 밖으로 빠져나온다던가 리스트 번호가 1부터 다시 시작한다던가 하는 안 좋은 일이 일어난다. HTML의 <code class="language-plaintext highlighter-rouge">&lt;ol&gt;</code> + <code class="language-plaintext highlighter-rouge">&lt;li&gt;</code> 등의 태그에서는 스코프가 명확히 정해져 있어서 이런 걸 쓰면 크게 신경 쓸 필요는 없는 일이긴 하다.</p>

    <figure style="text-align: center;">
     <img src="/cs-blog/assets/images/writing-the-first-post/image_2.png" alt="" style="border: 5px solid #555; text-align: center" />

     <figcaption> 대충 이렇게 된다. </figcaption>
 </figure>
  </li>
  <li>
    <p>LaTeX 수식</p>

    <p>LaTeX로 수식을 써보자.</p>

\[e^{i \theta} = \cos \theta + i \sin \theta\]

    <p>그냥은 안 된다. 다음 코드를 HTML의 <code class="language-plaintext highlighter-rouge">&lt;head&gt;</code>에 추가하면 된다.</p>
    <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nt">&lt;head&gt;</span>
     <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/x-mathjax-config"</span><span class="nt">&gt;</span>

     <span class="nx">MathJax</span><span class="p">.</span><span class="nx">Hub</span><span class="p">.</span><span class="nx">Config</span><span class="p">({</span>

     <span class="na">tex2jax</span><span class="p">:</span> <span class="p">{</span><span class="na">inlineMath</span><span class="p">:</span> <span class="p">[[</span><span class="dl">'</span><span class="s1">$</span><span class="dl">'</span><span class="p">,</span><span class="dl">'</span><span class="s1">$</span><span class="dl">'</span><span class="p">],</span> <span class="p">[</span><span class="dl">'</span><span class="se">\\</span><span class="s1">(</span><span class="dl">'</span><span class="p">,</span><span class="dl">'</span><span class="se">\\</span><span class="s1">)</span><span class="dl">'</span><span class="p">]]}</span>

     <span class="p">});</span>

     <span class="nt">&lt;/script&gt;</span>

     <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/latest.js?config=TeX-MML-AM_CHTML'</span> <span class="na">async</span><span class="nt">&gt;&lt;/script&gt;</span>
 <span class="nt">&lt;/head&gt;</span>
</code></pre></div>    </div>
    <p>Markdown으로 작성 중인 경우에는 <code class="language-plaintext highlighter-rouge">&lt;head&gt; &lt;/head&gt;</code> 문서 맨 위에 새로 만들어주고 그 안에 저걸 끼워넣으면 된다. 그런데 markdown에서 이렇게 하면 VSCode의 Markdown Preview 확장 프로그램이 맛이 가기 때문에 작성 내용이 어떻게 표시되는지 보고 싶다면 웹 브라우저에서 확인해야 한다.</p>
  </li>
  <li>
    <p>레이아웃 변경</p>

    <p>지금 레이아웃에서 마음에 안 드는 게 몇 가지 있다.</p>
    <figure style="width: 80%; margin: auto;">
     <img src="/cs-blog/assets/images/writing-the-first-post/image_3.png" alt="" style="text-align: center" />
 </figure>

    <p>일반적인 PC 환경인 가로로 길쭉한 화면 상태에서, 글씨가 쓸데없이 커져서 한 화면에 표시되는 정보량이 너무 적어진다. 화면의 가로 길이가 너무 짧다는 생각도 드는데 이것도 폰트 영향일 수도 있어서 폰트부터 고쳐 본 다음에 다시 확인해야 될 것 같다.</p>
    <figure style="width: 80%; margin: auto;">
     <img src="/cs-blog/assets/images/writing-the-first-post/image_4.png" alt="" />
     <figcaption> 이 정도면 좋을텐데 </figcaption>
 </figure>

    <p>반응형 UI의 폰트 크기 조절은 <code class="language-plaintext highlighter-rouge">_sass/minimal-mistakes/_reset.scss</code>에서 맨 위에 보이는 <code class="language-plaintext highlighter-rouge">html</code> 블럭 내의 값들을 바꿔 주면 된다. 가로 폭 조절은 <code class="language-plaintext highlighter-rouge">_sass/minimal-mistakes/_variables.scss</code>에서 <code class="language-plaintext highlighter-rouge">breakpoints</code>주석 아래에 있는 걸 고쳐주면 된다.</p>
  </li>
  <li>
    <p>태그 및 카테고리 지정</p>

    <p>Markdown 파일 맨 앞에 이렇게 생긴 걸 추가하면 된다.</p>
    <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="s">---</span>
 <span class="s">title</span><span class="err">:</span> <span class="s2">"</span><span class="s">Writing</span><span class="nv"> </span><span class="s">The</span><span class="nv"> </span><span class="s">First</span><span class="nv"> </span><span class="s">Post"</span>
 <span class="na">categories</span><span class="pi">:</span>
     <span class="pi">-</span> <span class="s">Others</span>
 <span class="na">tags</span><span class="pi">:</span>
     <span class="pi">-</span> <span class="s">html</span>
     <span class="pi">-</span> <span class="s">css</span>
     <span class="pi">-</span> <span class="s">markup</span>
 <span class="s">---</span>
</code></pre></div>    </div>

    <p>카테고리를 추가하거나 변경하면 포스트 주소가 바뀐다. 카테고리를 지정하지 않았을 때 주소가 <a href="http://sendoru.github.io/cs-blog/writing-the-first-post">http://sendoru.github.io/cs-blog/writing-the-first-post/</a>였다면, 카테고리를 Others로 바꾼 후에는 <a href="http://sendoru.github.io/cs-blog/others/writing-the-first-post/">http://sendoru.github.io/cs-blog/others/writing-the-first-post/</a>가 된다.</p>

    <p>위 문단에서 첫 번째 링크는 접속이 안 되어야 할 것 같은데 캐싱된 게 있는지 예전 페이지로 접속이 된다. 별 상관은 없을 듯</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">&lt;div&gt;</code> 또는 그 이외의 컨테이너 가운데 정렬</p>

    <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nt">&lt;figure&gt;</span>
     <span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"/cs-blog/assets/images/writing-the-first-post/image_4.png"</span> <span class="na">alt=</span><span class="s">""</span><span class="nt">&gt;</span>
     <span class="nt">&lt;figcaption&gt;</span> 이 정도면 좋을텐데 <span class="nt">&lt;/figcaption&gt;</span>
 <span class="nt">&lt;/figure&gt;</span>
</code></pre></div>    </div>

    <p>이렇게 이미지를 넣을 때, 이미지 사이즈를 80%로 줄이고 가운데 정렬로 만드려면  <code class="language-plaintext highlighter-rouge">style="width: 80%; margin: auto;"</code> 스타일 속성을 <strong>figure</strong>에 넣어줘야 한다.</p>
  </li>
</ol>]]></content><author><name>sendol</name><email>sendol39@gmail.com</email></author><category term="Others" /><category term="html" /><category term="css" /><category term="markup" /><summary type="html"><![CDATA[]]></summary></entry></feed>